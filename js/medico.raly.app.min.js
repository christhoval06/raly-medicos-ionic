/**
 * Created with IntelliJ IDEA.
 * User: cristobal
 * Date: 05/19/14
 * Time: 12:29 PM
 * To change this template use File | Settings | File Templates.
 */
angular.module('RalyMedicosApp', [
  'ionic',
  'LocalStorageModule',
  'RalyMedicosApp.controllers',
  'RalyMedicosApp.services',
  'RalyMedicosApp.models'
]);
angular.module('RalyMedicosApp').config([
  'localStorageServiceProvider',
  function (localStorageServiceProvider) {
    localStorageServiceProvider.setPrefix('RalyMedicosApp');
  }
]).config([
  '$httpProvider',
  function ($httpProvider) {
    $httpProvider.defaults.useXDomain = true;
    delete $httpProvider.defaults.headers.common['X-Requested-With'];
  }
]).config(function ($stateProvider, $urlRouterProvider) {
  $stateProvider.state('login', {
    url: '/login',
    templateUrl: 'templates/login.html',
    controller: 'LoginController'
  }).state('inicio', {
    url: '/inicio',
    abstract: true,
    templateUrl: 'templates/inicio.html',
    controller: 'MainController'
  }).state('inicio.pacientes', {
    url: '/pacientes',
    views: {
      'menuContent': {
        templateUrl: 'templates/pacientes.html',
        controller: 'PacientesController'
      }
    }
  }).state('inicio.resultados', {
    url: '/resultados',
    views: {
      'menuContent': {
        templateUrl: 'templates/resultados.html',
        controller: 'ResultadosController'
      }
    }
  }).state('inicio.medico', {
    url: '/medico',
    views: {
      'menuContent': {
        templateUrl: 'templates/medico.html',
        controller: 'MedicoController'
      }
    }
  });
  $urlRouterProvider.otherwise('/login');
});
angular.module('RalyMedicosApp.services', []);
angular.module('RalyMedicosApp.controllers', []);
angular.module('RalyMedicosApp.models', []);
/**
 * Created with IntelliJ IDEA.
 * User: cristobal
 * Date: 05/19/14
 * Time: 12:23 PM
 * To change this template use File | Settings | File Templates.
 */
angular.module('RalyMedicosApp.controllers').controller('LoginController', [
  '$scope',
  '$state',
  '$stateParams',
  '$ionicLoading',
  'UserService',
  'ValidationService',
  function ($scope, $state, $stateParams, $ionicLoading, UserService, ValidationService) {
    $scope.title = 'Entrar';
    $scope.usuario = {};
    if (UserService.getFromLocal()) {
      $state.go('inicio.pacientes');
    }
    // Form validation is handled by the ValidationSerice
    $scope.inputValid = ValidationService.inputValid;
    $scope.inputInvalid = ValidationService.inputInvalid;
    $scope.showError = ValidationService.showError;
    $scope.canSubmit = ValidationService.canSubmit;
    // Flash message.  Used to indicate error messages to the usuario
    $scope.signupLoginError = false;
    $scope.flashMessage = '';
    $scope.dismiss = function () {
      $scope.signupLoginError = false;
    };
    // Trigger the loading indicator
    $scope.show = function () {
      // Show the loading overlay and text
      $scope.loading = $ionicLoading.show({
        content: 'Loading...',
        animation: 'fade-in',
        showBackdrop: true,
        maxWidth: 200,
        showDelay: 500
      });
    };
    // Hide the loading indicator
    $scope.hide = function () {
      $ionicLoading.hide();
    };
    $scope.submit = function (form) {
      $scope.show();
      UserService.login($scope.usuario).then(function (data) {
        $scope.hide();
        ValidationService.resetForm(form);
        if (data.success) {
          UserService.save(data);
          if (UserService.loadCurrentUser())
            $state.go('inicio.pacientes');
          else
            console.log('No se han guardado los datos');
        } else {
          $scope.flashMessage = 'Hmmm, you must be using the wrong credentials';
          //TODO:
          $scope.signupLoginError = true;
        }
      }, function (reason) {
        ValidationService.resetForm(form);
        $scope.hide();
        console.log('reason: ', reason);
        $scope.flashMessage = 'Hmmm, you must be using the wrong credentials';
        //TODO:
        $scope.signupLoginError = true;
      });
    };
  }
]).controller('MainController', [
  '$scope',
  '$state',
  'Menu',
  'UserService',
  '$ionicSideMenuDelegate',
  function ($scope, $state, Menu, UserService, $ionicSideMenuDelegate) {
    Menu.save([
      {
        titulo: 'Mis Pacientes',
        state: 'inicio.pacientes'
      },
      {
        titulo: 'Info General',
        state: 'inicio.info'
      },
      {
        titulo: 'Info M\xe9dico',
        state: 'inicio.medico'
      },
      { titulo: 'Salir' }
    ]);
    $scope.menuLista = Menu.all();
    $scope.activeMenu = $scope.menuLista[Menu.getLastActiveIndex()];
    $scope.toggleMenu = function () {
      $ionicSideMenuDelegate.toggleLeft();
    };
    $scope.selectMenu = function (menu, index) {
      $scope.activeMenu = menu;
      switch (menu.titulo.toLocaleLowerCase()) {
      case 'salir':
        UserService.logout(UserService.loadCurrentUser());
        break;
      default:
        $state.go(menu.state);
        $ionicSideMenuDelegate.toggleLeft(false);
        break;
      }
    };
  }
]).controller('MedicoController', [
  '$scope',
  '$state',
  '$window',
  '$ionicLoading',
  'ValidationService',
  'UserService',
  function ($scope, $state, $window, $ionicLoading, ValidationService, UserService) {
    $scope.medico = {};
    $scope.ismsg = false;
    $scope.inputValid = ValidationService.inputValid;
    $scope.inputInvalid = ValidationService.inputInvalid;
    $scope.showError = ValidationService.showError;
    $scope.isPasswdValid = ValidationService.isPasswdValid;
    $scope.isPasswdInvalid = ValidationService.isPasswdInvalid;
    $scope.goBack = function () {
      $window.history.back();
    };
    $scope.submit = function () {
      $scope.show('guardando Info del Medico');
      UserService.setmedico($scope.medico).then(function (data) {
        $scope.msg = data.text;
        $scope.ismsg = true;
        $scope.hide();
      }, function (reason) {
        $scope.hide();
        console.log('reason: ', reason);
      });
    };
    $scope.dismiss = function () {
      $scope.ismsg = false;
    };
    $scope.show = function (msg) {
      // Show the loading overlay and text
      $scope.loading = $ionicLoading.show({
        content: msg,
        animation: 'fade-in',
        showBackdrop: true,
        maxWidth: 200,
        showDelay: 500
      });
    };
    $scope.hide = function () {
      $ionicLoading.hide();
    };
    $scope.show('Cargando Info del Medico');
    UserService.getmedico().then(function (data) {
      console.log(data);
      $scope.hide();
      if (data.success) {
        $scope.medico = data.medico[0];
      } else {
        $scope.msg = data.text;
        $scope.ismsg = true;
      }
      $scope.hide();
    }, function (reason) {
      $scope.hide();
      console.log('reason: ', reason);
      $scope.flashMessage = 'Hmmm, you must be using the wrong credentials';
      //TODO:
      $scope.signupLoginError = true;
    });
  }
]).controller('PacientesController', [
  '$scope',
  '$state',
  'PacientesService',
  '$ionicLoading',
  function ($scope, $state, PacientesService, $ionicLoading) {
    $scope.ActivePaciente = PacientesService.getActivePaciente();
    $scope.pacientes = [];
    $scope.pacientesServer = [];
    $scope.busqueda = false;
    $scope.show = function () {
      $scope.loading = $ionicLoading.show({
        content: 'Cargando Pacientes...',
        animation: 'fade-in',
        showBackdrop: true,
        maxWidth: 200,
        showDelay: 500
      });
    };
    $scope.getFotoPaciente = PacientesService.getFotoPaciente;
    $scope.fotoPacienteClick = function (paciente) {
      console.log('fotoPacienteClick');
    };
    $scope.clearSearch = function () {
      console.log('clearSearch');
      $scope.busqueda = false;
      $scope.search = '';
    };
    $scope.pacienteClick = function (paciente) {
      console.log('pacienteClick');
      PacientesService.setActivePaciente(paciente);
      $scope.ActibePaciente = paciente;
      $state.go('inicio.resultados');
    };
    $scope.show();
    $scope.hide = function () {
      $ionicLoading.hide();
    };
    var pacientes = PacientesService.getFromLocal();
    if (pacientes.length > 0) {
      $scope.pacientes = pacientes;
      $scope.hide();
    } else {
      PacientesService.get().then(function (data) {
        if (data.success) {
          $scope.pacientes = PacientesService.save(data.pacientes);
        }
        $scope.hide();
      }, function (reason) {
        $scope.hide();
        console.log('reason: ', reason);
        alert(reason);
        $scope.emptyMessage = 'No tiene Pacientes Recientes';
        $scope.noPacientesList = true;
      });
    }
    $scope.buscarPacientes = function () {
      $scope.show();
      $scope.busqueda = true;
      $scope.pacientesServer = [];
      PacientesService.get($scope.search).then(function (data) {
        if (data.success) {
          $scope.pacientesServer = PacientesService.makeGroupedList(data.pacientes);
        }
        $scope.hide();
      }, function (reason) {
        $scope.hide();
        console.log('reason: ', reason);
        alert(reason);
        $scope.emptyMessage = 'No tiene Pacientes Recientes';
        $scope.noPacientesList = true;
      });
    };
    var letterHasMatch = {};
    $scope.getPacientes = function () {
      letterHasMatch = {};
      var pacientes = $scope.busqueda ? $scope.pacientesServer : $scope.pacientes;
      return pacientes.filter(function (item) {
        var itemDoesMatch = !$scope.search || item.divider || item.nombre.toLowerCase().indexOf($scope.search.toLowerCase()) > -1 || item.codigo.toLowerCase().indexOf($scope.search.toLowerCase()) > -1 || item.cedula.toLowerCase().indexOf($scope.search.toLowerCase()) > -1;
        if (!item.divider && itemDoesMatch) {
          var letter = item.nombre.charAt(0).toUpperCase();
          letterHasMatch[letter] = true;
        }
        return itemDoesMatch;
      }).filter(function (item) {
        if (item.divider && !letterHasMatch[item.letter]) {
          return false;
        }
        return true;
      });
    };
  }
]).controller('ResultadosController', [
  '$scope',
  '$state',
  '$window',
  'ResultadosService',
  '$ionicLoading',
  '$ionicActionSheet',
  function ($scope, $state, $window, ResultadosService, $ionicLoading, $ionicActionSheet) {
    $scope.paciente = ResultadosService.getPaciente();
    $scope.show = function () {
      $scope.loading = $ionicLoading.show({
        content: 'Cargando Resultados...',
        animation: 'fade-in',
        showBackdrop: true,
        maxWidth: 200,
        showDelay: 500
      });
    };
    $scope.showOps = function (resultado) {
      $ionicActionSheet.show({
        buttons: [
          {
            text: '<b>Ver Resultado</b>',
            index: 0
          },
          {
            text: '<b>Antecedentes</b>',
            index: 1
          }
        ],
        cancelText: 'Cancelar',
        buttonClicked: function (index) {
          var win = $window.open(ResultadosService.getResultadoPDF(resultado, index), '_blank');
          win.focus();
          return true;
        },
        cancel: function () {
          return false;
        }
      });
    };
    $scope.hide = function () {
      $ionicLoading.hide();
    };
    $scope.resultadoClick = function (paciente, resultado) {
      console.log('resultadoClick');
      ResultadosService.setActiveResultado(resultado);
      $state.go('inicio.pdf');
    };
    $scope.goToPaciente = function () {
      $window.history.back();
    };
    $scope.show();
    resultados = ResultadosService.getFromLocal($scope.paciente);
    if (resultados.length > 0) {
      $scope.resultados = resultados;
      $scope.hide();
    } else {
      ResultadosService.get($scope.paciente).then(function (data) {
        $scope.hide();
        if (data.success) {
          $scope.resultados = ResultadosService.save($scope.paciente, data.resultados);
        }
      }, function (reason) {
        $scope.hide();
        console.log('reason: ', reason);
        $scope.emptyMessage = 'No tiene Resultados Recientes';
        $scope.noResultadoList = true;
      });
    }
  }
]);
/**
 * Created with IntelliJ IDEA.
 * User: cristobal
 * Date: 05/19/14
 * Time: 12:26 PM
 * To change this template use File | Settings | File Templates.
 */
angular.module('RalyMedicosApp.models').factory('Paciente', [
  'localStorageService',
  function (localStorageService) {
    return {
      all: function () {
        var pacienteString = localStorageService.get('pacientes');
        if (pacienteString)
          return angular.fromJson(pacienteString);
        return [];
      },
      save: function (pacientes) {
        localStorageService.add('pacientes', angular.toJson(pacientes));
      },
      getPacienteWithIndex: function (index) {
        return this.all()[index];
      },
      getActivePaciente: function () {
        var pacienteString = localStorageService.get('ActivePaciente');
        if (!angular.isUndefined(pacienteString))
          return angular.fromJson(pacienteString);
        return {};
      },
      setActivePaciente: function (paciente) {
        localStorageService.add('ActivePaciente', angular.toJson(paciente));
      },
      getFoto: function (paciente, skey) {
        if (paciente.foto == '../images/fotonula.jpg')
          return 'img/noimage.png';
        return paciente.foto + '&skey=' + skey;
      }
    };
  }
]).factory('Menu', [
  'localStorageService',
  function (localStorageService) {
    return {
      all: function () {
        var menuString = localStorageService.get('menus');
        if (menuString)
          return angular.fromJson(menuString);
        return [];
      },
      save: function (menus) {
        localStorageService.add('menus', angular.toJson(menus));
      },
      getLastActiveIndex: function () {
        return parseInt(localStorageService.get('lastActiveMenu')) || 0;
      },
      setLastActiveIndex: function (index) {
        localStorageService.add('lastActiveMenu', index);
      }
    };
  }
]).factory('Resultado', [
  'localStorageService',
  function (localStorageService) {
    return {
      all: function (paciente) {
        var resultadosString = localStorageService.get(paciente.pacienteid);
        if (resultadosString)
          return angular.fromJson(resultadosString);
        return [];
      },
      save: function (paciente, resultados) {
        localStorageService.add(paciente.pacienteid, angular.toJson(resultados));
      },
      getResultadoWithPacienteAndIndex: function (paciente, index) {
        return this.all()[paciente.pacienteid][index];
      },
      getActiveResultado: function () {
        var string = localStorageService.get('ActiveResultado');
        if (!angular.isUndefined(string))
          return angular.fromJson(string);
        return {};
      },
      setActiveResultado: function (resultado) {
        localStorageService.add('ActiveResultado', angular.toJson(resultado));
      },
      getResultadoPDF: function (resultado, skey, tipo) {
        return 'http://laboratorioraly.com' + resultado.pdf + '&skey=' + skey + (tipo == 1 ? '&bloque=2' : '') + '&d=4';
      }
    };
  }
]);
/**
 * Created with IntelliJ IDEA.
 * User: cristobal
 * Date: 05/19/14
 * Time: 12:27 PM
 * To change this template use File | Settings | File Templates.
 */
angular.module('RalyMedicosApp.services').provider('httpService', function () {
  this.$get = [
    '$http',
    '$q',
    function ($http, $q) {
      return {
        _httpHelper: function (url, body) {
          //body.callback = 'JSON_CALLBACK';
          var d = $q.defer();
          $http.get(url, {
            params: body,
            method: 'POST'
          }).success(function (data, status, headers, config) {
            d.resolve(data);
          }).error(function (data, status, headers, config) {
            alert(status);
            console.log(status);
            d.reject(data, status);
          });
          return d.promise;
        },
        get: function (url, d) {
          return this._httpHelper(url, d);
        }
      };
    }
  ];
}).provider('PacientesService', function () {
  this.$get = [
    'Paciente',
    'httpService',
    'UserService',
    function (Paciente, httpService, UserService) {
      return {
        get: function (q) {
          var d = {};
          d.skey = UserService.getUserKey();
          if (q) {
            d.fnt = 'buscarpaciente';
            d.buscar = q;
          } else {
            d.fnt = 'listamispacientes';
          }
          return httpService.get('http://laboratorioraly.com/raly/medicom', d);
        },
        makeGroupedList: function (pacientes) {
          var lista = [], letras = [];
          angular.forEach(pacientes, function (paciente) {
            if (!(letras.indexOf(paciente.nombre.substring(0, 1).toLocaleUpperCase()) > -1)) {
              letras.push(paciente.nombre.substring(0, 1).toLocaleUpperCase());
              lista.push({
                divider: true,
                letra: paciente.nombre.substring(0, 1).toLocaleUpperCase()
              });
            }
            lista.push(paciente);
          });
          return lista;
        },
        save: function (pacientes) {
          var lista = this.makeGroupedList(pacientes);
          Paciente.save(lista);
          return lista;
        },
        getFromLocal: Paciente.all,
        loadPaciente: Paciente.getPacienteWithIndex,
        getActivePaciente: Paciente.getActivePaciente,
        setActivePaciente: Paciente.setActivePaciente,
        getFotoPaciente: function (paciente) {
          return Paciente.getFoto(paciente, UserService.getUserKey());
        }
      };
    }
  ];
}).provider('ResultadosService', function () {
  this.$get = [
    'Resultado',
    'Paciente',
    'httpService',
    'UserService',
    function (Resultado, Paciente, httpService, UserService) {
      return {
        get: function (paciente) {
          var d = {};
          d.skey = UserService.getUserKey();
          d.fnt = 'resultados';
          d.pacienteid = paciente.pacienteid;
          return httpService.get('http://laboratorioraly.com/raly/medicom', d);
        },
        makeGroupedList: function (resultados) {
          var lista = [], fechas = [];
          angular.forEach(resultados, function (resultado) {
            if (!(fechas.indexOf(resultado.fecha) > -1)) {
              fechas.push(resultado.fecha);
              lista.push({
                divider: true,
                fecha: resultado.fecha
              });
            }
            lista.push(resultado);
          });
          return lista;
        },
        save: function (paciente, resultados) {
          var lista = this.makeGroupedList(resultados);
          Resultado.save(paciente, lista);
          return lista;
        },
        getFromLocal: Resultado.all,
        loadResultados: Resultado.getResultadoWithPacienteAndIndex,
        getPaciente: Paciente.getActivePaciente,
        getActiveResultado: Resultado.getActiveResultado,
        setActiveResultado: Resultado.setActiveResultado,
        getResultadoPDF: function (resultado, tipo) {
          return Resultado.getResultadoPDF(resultado, UserService.getUserKey(), tipo);
        }
      };
    }
  ];
}).provider('UserService', function () {
  this.$get = [
    'httpService',
    'localStorageService',
    function (httpService, localStorageService) {
      var getUserKey = function () {
        var user = localStorageService.get('currentUser');
        if (!angular.isUndefined(user)) {
          return user.skey;
        }
        return '';
      };
      return {
        login: function (user) {
          return httpService.get('http://laboratorioraly.com/raly/hacerloginmed', user);
        },
        getmedico: function () {
          return httpService.get('http://laboratorioraly.com/raly/medicom', {
            fnt: 'registromedico',
            skey: this.getUserKey()
          });
        },
        setmedico: function (d) {
          d.fnt = 'registromedico';
          d.skey = this.getUserKey();
          d.origenid = 'guardar';
          return httpService.get('http://laboratorioraly.com/raly/medicom', d);
        },
        logout: function () {
          localStorageService.clearAll();
          window.location.assign('#/login');
        },
        save: function (userData) {
          localStorageService.add('currentUser', userData);
        },
        getFromLocal: function () {
          return localStorageService.get('currentUser');
        },
        loadCurrentUser: function () {
          var u = this.getFromLocal();
          if (u) {
            return angular.fromJson(u);
          }
          return undefined;
        },
        getUserKey: getUserKey
      };
    }
  ];
}).factory('ValidationService', function () {
  return {
    resetForm: function (form) {
      form.$setPristine();
    },
    inputValid: function (form) {
      return form.$valid && form.$dirty;
    },
    inputInvalid: function (form) {
      return form.$invalid && form.$dirty;
    },
    showError: function (form, error) {
      return form.$error[error];
    },
    isPasswdValid: function (pass0, pass1) {
      return angular.equals(pass0.$modelValue, pass1.$modelValue) && pass1.$valid && pass1.$dirty;
    },
    isPasswdInvalid: function (pass0, pass1) {
      return !angular.equals(pass0.$modelValue, pass1.$modelValue) && pass1.$dirty;
    }
  };
});